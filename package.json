{
	"name": "aikeys",
	"displayName": "AI-Keys",
	"description": "Connect to generative AI models from varied providers.",
	"publisher": "tomcodedthis",
	"icon": "aikeys-icon.png",
	"repository": {
		"url": "https://github.com/tomcodedthis/AI-Keys"
	},
	"version": "0.0.20",
	"engines": {
		"vscode": "^1.74.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "aikeys.goToSettings",
				"title": "AI-Keys: Open Settings"
			},
			{
				"command": "aikeys.sendLinePrompt",
				"title": "AI-Keys: Search Line"
			},
			{
				"command": "aikeys.sendBoxPrompt",
				"title": "AI-Keys: Search Prompt"
			},
			{
				"command": "aikeys.listModels",
				"title": "AI-Keys: Available Models"
			},
			{
				"command": "aikeys.clearChat",
				"title": "AI-Keys: Reset GPT Chat"
			}
		],
		"configuration": [
			{
				"title": "AI-Keys",
				"properties": {
					"AI-Keys.keys": {
						"type": "object",
						"description": "Define your API Keys.",
						"properties": {
							"openai": {
								"type": "string"
							},
							"clarifai": {
								"type": "string"
							},
							"huggingface": {
								"type": "string"
							}
						},
						"default": {
							"openai": "",
							"clarifai": "",
							"huggingface": ""
						}
					},
					"AI-Keys.defaultModel": {
						"type": "string",
						"description": "Choose the model to use when a prompt doesn't pass a model as argument.",
						"default": "GPT-3.5-TURBO",
						"enum": [
							"GPT-3.5-TURBO",
							"GPT-3",
							"DALLE",
							"Clarifai"
						],
						"enumDescriptions": [
							"Chat Completion",
							"Text Completion",
							"Image Generation",
							"Image Recognition"
						]
					},
					"AI-Keys.active.provider": {
						"type": "string",
						"default": "openai"
					},
					"AI-Keys.active.model": {
						"type": "string",
						"default": "gpt"
					},
					"AI-Keys.openAI.maxTokens": {
						"type": "number",
						"description": "Set your max token response.\n\n1 Token = 1 Character",
						"default": 256
					},
					"AI-Keys.openAI.system": {
						"type": "string",
						"description": "For GPT-3.5-Turbo and above, define the behavior of how GPT should respond.\n\ne.g. You are a helpful assistant",
						"default": "You are a software engineer"
					},
					"AI-Keys.openAI.messages": {
						"type": "array",
						"description": "Your active chat log sent to GPT each request.\n\nClear this to reduce you token usage.",
						"default": [],
						"minItems": []
					},
					"AI-Keys.openAI.tokenWarn": {
						"type": "number",
						"description": "The limit at which to warn of a prompts token usage.",
						"default": 1000
					},
					"AI-Keys.prefix": {
						"type": "string",
						"description": "Add a preffix to start your prompt.\n\ne.g. Framework / Library / Topic",
						"default": ""
					},
					"AI-Keys.imageFormat": {
						"type": "string",
						"description": "Choose the format of AI image generated.\n\nWINDOW NEEDS TO BE REFRESED TO TAKE EFFECT",
						"default": "webp",
						"enum": [
							"webp",
							"jpg",
							"jpeg",
							"png"
						],
						"enumDescriptions": [
							"webp",
							"jpg",
							"jpeg",
							"png"
						]
					},
					"AI-Keys.imageResolution": {
						"type": "string",
						"description": "Choose the resolution of AI image generated, higher resolustion typically results in a higher cost.\n\nWINDOW NEEDS TO BE REFRESED TO TAKE EFFECT",
						"default": "256x256",
						"enum": [
							"256x256",
							"512x512",
							"1024x1024"
						],
						"enumDescriptions": [
							"256x256",
							"512x512",
							"1024x1024"
						]
					},
					"AI-Keys.clarifai.modelType": {
						"type": "string",
						"description": "Choose which type of generative AI from Clarifai you're using.",
						"default": "Image Recognition",
						"enum": [
							"Image Recognition"
						],
						"enumDescriptions": [
							"Returns the top-10 concepts and probability of what an image contains."
						]
					},
					"AI-Keys.clarifai.modelID": {
						"type": "string",
						"description": "Specify the model ID to use for your Clarifai requests.",
						"default": "aaa03c23b3724a16a56b629203edc62c"
					},
					"AI-Keys.huggingFace.model": {
						"type": "string",
						"description": "Specify the model ID to use for your Hugging Face requests.\n\nWINDOW MAY NEED TO BE REFRESED TO TAKE EFFECT",
						"default": "gpt2"
					}
				}
			}
		],
		"keybindings": [
			{
				"command": "aikeys.sendLinePrompt",
				"key": "ctrl+alt+/",
				"mac": "cmd+alt+/",
				"when": "editorTextFocus"
			},
			{
				"command": "aikeys.sendLinePrompt",
				"key": "ctrl+enter",
				"mac": "cmd+enter",
				"when": "editorTextFocus"
			},
			{
				"command": "aikeys.listModels",
				"key": "ctrl+alt+m",
				"mac": "cmd+alt+m",
				"when": "editorTextFocus"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "aikeys",
					"title": "AI Keys",
					"icon": "media/images/aikeys-icon.svg"
				}
			]
		},
		"views": {
			"aikeys": [
				{
					"type": "webview",
					"id": "aikeys.chat",
					"name": "AI Chat"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run esbuild-base -- --minify",
		"esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --external:unfetch --platform=node",
		"compile": "tsc -p ./",
		"watch": "tsc -w",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js",
		"format": "prettier-eslint \"src/**/*.ts\""
	},
	"devDependencies": {
		"@types/glob": "^8.0.0",
		"@types/mocha": "^10.0.1",
		"@types/node": "16.x",
		"@types/request": "^2.48.8",
		"@types/vscode": "^1.74.0",
		"@typescript-eslint/eslint-plugin": "^5.52.0",
		"@typescript-eslint/parser": "^5.52.0",
		"@vscode/test-electron": "^2.2.0",
		"esbuild": "^0.17.10",
		"eslint": "^8.34.0",
		"glob": "^8.0.3",
		"mocha": "^10.1.0",
		"prettier-eslint": "^15.0.1",
		"prettier-eslint-cli": "^7.1.0",
		"typescript": "^4.9.5"
	},
	"dependencies": {
		"huggingface": "^1.4.0",
		"openai": "^3.2.1",
		"request": "^2.88.2",
		"title-case": "^3.0.3"
	}
}
